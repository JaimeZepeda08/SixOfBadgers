#####################################
############### Setup ###############
#####################################
image: docker:20.10.17
services:
    - docker:20.10.17-dind

variables:
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci

stages:
  - build
  - lint
  - unit_test
  - release

#####################################
############### Build ###############
#####################################
build:
    stage: build
    image: gradle:8.5
    before_script:
        - cd $CI_PROJECT_DIR/euchreGame/backend
        - ./gradlew clean
    script:
        - ./gradlew build
    tags:
        - dind

#####################################
#Linting and Static Analysis (Backend)
#####################################
lint_backend:
  stage: lint
  image: gradle:8.5
  before_script:
    - cd $CI_PROJECT_DIR/euchreGame/backend
    - ./gradlew build --stacktrace
  script:
    - gradle check
  tags:
    - dind

lint_frontend:
  stage: lint
  image: node:latest
  before_script:
    - cd $CI_PROJECT_DIR/euchreGame/frontend
    - npm install
  script:
    - npm run lint
  tags:
    - dind

#####################################
############## Testing ##############
#####################################
unit_test_backend:
  stage: unit_test
  image: gradle:8.5
  before_script:
    - cd $CI_PROJECT_DIR/euchreGame/backend
    - ./gradlew build
  script:
    - ./gradlew test
    - ./gradlew jacocoTestReport
    - ./gradlew jacocoTestCoverageVerification
  after_script:
    - echo "Coverage report generated. Check the report at build/jacocoHtml/index.html"
    - cat euchreGame/backend/build/jacocoHtml/index.html | grep -o 'Total[^%]*%' | sed 's/<.*>/ /; s/Total/Jacoco Coverage Total:/'
  artifacts:
    paths:
      - $CI_PROJECT_DIR/euchreGame/backend/build/jacocoHtml/index.html
    reports:
      junit:
       - $CI_PROJECT_DIR/euchreGame/backend/build/test-results/test/*.xml
  coverage: /Total.*?([0-9]{1,3})%/ # regex to match the coverage percentage
  tags:
    - dind

#####################################
########## Build & Release ##########
#####################################
release:
  stage: release
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/euchreGame/backend:$RELEASE_TAG .
    - docker tag $CI_REGISTRY_IMAGE/euchreGame/backend:$RELEASE_TAG $CI_REGISTRY_PROJ/backend:latest
    - docker push $CI_REGISTRY_IMAGE/euchreGame/backend:$RELEASE_TAG
    - docker push $CI_REGISTRY_IMAGE/euchreGame/backend:latest
  tags:
    - dind
  only:
    - main

